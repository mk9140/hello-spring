************회원 관리 예제 - 백엔드************

*비즈니스 요구사항 정리 -가장 간단한 경우의 예시-
-데이터	: 회원ID, 이름
-기능	: 회원등록, 조회
-DB		: 아직 DB가 선정되지 않은 경우를 상정


*일반적인 웹 어플리케이션 계층 구조
컨트롤러 --> 서비스 --> 리포지토리 --> DB
	|		  |			|
	-->		도메인	  <--

-컨트롤러	: 웹mvc의 컨트롤러 역할
-서비스		: 핵심 비즈니스 로직 구현
-리포지토리	: 데이터베이스에 접근, 도메인 객체를 DB에 저장하고 관리됨
-도메인		: 비즈니스 도메인 객체. 예)회원, 주문, 쿠폰 등 주로 DB에 저장하고 관리 됨


*클레스 의존관계

MemberService --> (interface)MemberRepository
									^
									|
							MemoryMemberRepository (구현체. 일단 메모리 기반DB H2 사용-> DB선정되면 교체)

-아직 DB가 선정되지 않았으므로 일단 인터페이스로 구현 클레스를 변경할 수 있도록 설계
-DB는 RDB, NoSQL 등등 있다
-개발을 진행하기 위해 초기 개발 단계에서는 구현체로 가벼운 메모리 기반의 DB사용


*테스트 케이스 작성
개발한 기능 실행해서 테스트 할 때 -> 자바의 main메서드 통해 실행하거나
웹 어플리케이션의 컨트롤러를 통해서 해당 기능 실행하게 되면
준비하고 실행하는데 오래걸림 + 반복적인 실행 어려움 + 여러 테스트 한 번에 실행하기 어려움
-->Junit이라는 테스트프레임워크로 테스트 실행해서 이러한 문제 해결
